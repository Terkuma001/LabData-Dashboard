# -*- coding: utf-8 -*-
"""LabData Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1stOp2sYJS4H5xoepIpwhWW5MlKd6ATnl
"""

import streamlit as st
import pandas as pd

# ---------- SETTINGS ----------
SHEET_ID = "1ZlL-Io8VDlEXo03pFEFnh_A9ynFcBHSQ1M6AWfvGt0A"
SHEET_NAME = "Form Responses 1"
CSV_URL = f"https://docs.google.com/spreadsheets/d/{SHEET_ID}/gviz/tq?tqx=out:csv&sheet={SHEET_NAME}"

# ---------- PAGE CONFIG ----------
st.set_page_config(page_title="üß™ Medical Lab Dashboard", layout="wide")
st.title("üß™ Medical Laboratory Sample Dashboard")

# ---------- LOAD DATA ----------
@st.cache_data
def load_data():
    try:
        df = pd.read_csv(CSV_URL)
        df.columns = [col.strip() for col in df.columns]
        return df
    except Exception as e:
        st.error("‚ö†Ô∏è Failed to load data. Check your Google Sheet permissions.")
        return pd.DataFrame()

df = load_data()

if df.empty:
    st.stop()

# ---------- FILTERS ----------
with st.sidebar:
    st.header("üîç Filters")
    test_types = df["Test or Test Indicated For"].dropna().unique().tolist()
    selected_test = st.selectbox("Select Test", ["All"] + test_types)

    sample_names = df["Sample Name"].dropna().unique().tolist()
    selected_sample = st.selectbox("Select Sample Name", ["All"] + sample_names)

    st.markdown("---")
    st.markdown("‚úÖ Data collected using [Google Form](https://forms.gle/A7NtDxg2m6JzUAT2A)")

# Apply filters
filtered_df = df.copy()
if selected_test != "All":
    filtered_df = filtered_df[filtered_df["Test or Test Indicated For"] == selected_test]
if selected_sample != "All":
    filtered_df = filtered_df[filtered_df["Sample Name"] == selected_sample]

# ---------- SUMMARY STATS ----------
st.subheader("üìä Summary")
col1, col2 = st.columns(2)

with col1:
    st.metric("Total Records", len(filtered_df))

with col2:
    st.metric("Unique Sample Types", filtered_df["Sample Name"].nunique())

# ---------- DATA DISPLAY ----------
st.subheader("üìã Sample Records")
st.dataframe(filtered_df, use_container_width=True)

# ---------- VISUALIZATION ----------
if "Test or Test Indicated For" in filtered_df.columns:
    st.subheader("üß™ Test Frequency")
    st.bar_chart(filtered_df["Test or Test Indicated For"].value_counts())

if "Sample Name" in filtered_df.columns:
    st.subheader("üß¨ Sample Name Distribution")
    st.bar_chart(filtered_df["Sample Name"].value_counts())

# ---------- DOWNLOAD ----------
st.subheader("‚¨áÔ∏è Download Data")
st.download_button("Download CSV", filtered_df.to_csv(index=False), file_name="filtered_medical_data.csv", mime="text/csv")